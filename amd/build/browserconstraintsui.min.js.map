{"version":3,"file":"browserconstraintsui.min.js","sources":["../src/browserconstraintsui.js"],"sourcesContent":["/* eslint-disable */\n\nimport Templates from 'core/templates';\n\n/**\n * Init\n * @param {object} config\n * @param {array} bannertypes\n * @param {array} defaultbrowsers\n */\nexport async function init(config, bannertypes, defaultbrowsers) {\n    const root = document.getElementById('local_softwarewarning-config');\n    const selectEls = root.querySelectorAll('*[data-sw-selected]');\n    for (let selectEl of selectEls) {\n        selectEl.value = selectEl.getAttribute('data-sw-selected');\n    }\n\n    root.oninput = (e, i) => {\n        console.log(e, i);\n    }\n\n    root.hidden = false;\n}\n\nasync function wait(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\nasync function createBrowserconfigelement() {\n    const html = await Templates.render('local_softwarewarning/browserconfig', {i: 0, banners: ['ban1', 'ban2']});\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    // console.log(div.firstElementChild);\n}"],"names":["config","bannertypes","defaultbrowsers","root","document","getElementById","selectEls","querySelectorAll","selectEl","value","getAttribute","oninput","e","i","console","log","hidden"],"mappings":"6MAU2BA,OAAQC,YAAaC,uBACtCC,KAAOC,SAASC,eAAe,gCAC/BC,UAAYH,KAAKI,iBAAiB,2BACnC,IAAIC,YAAYF,UACjBE,SAASC,MAAQD,SAASE,aAAa,oBAG3CP,KAAKQ,QAAU,CAACC,EAAGC,KACfC,QAAQC,IAAIH,EAAGC,IAGnBV,KAAKa,QAAS"}