{"version":3,"file":"browserconstraintsui.min.js","sources":["../src/browserconstraintsui.js"],"sourcesContent":["/* eslint-disable */\n\nimport Templates from 'core/templates';\n\nlet anchor, configroot, bannertypes, defaultbrowsers;\n\n/**\n * Init\n * @param {object} _config\n * @param {array} _bannertypes\n * @param {array} _defaultbrowsers\n */\nexport async function init(_config, _bannertypes, _defaultbrowsers) {\n    bannertypes = _bannertypes;\n    defaultbrowsers = _defaultbrowsers;\n\n    anchor = document.getElementById('local_softwarewarning-anchor');\n    const root = await createBrowserConfigElement(_config);\n    configroot = root.querySelector('#local_softwarewarning-config');\n    const savebtn = root.querySelector('#local_softwarewarning-save');\n\n    savebtn.onclick = () => {\n        const configjson = JSON.stringify(getConfigFromDOM());\n        const form = document.createElement('form');\n        form.method = 'post';\n        form.action = '';\n        let input = document.createElement('input');\n        input.name = 'sesskey';\n        input.value = M.cfg.sesskey;\n        form.appendChild(input);\n        input = document.createElement('input');\n        input.name = 'json';\n        input.value = configjson;\n        form.appendChild(input);\n        document.body.appendChild(form);\n        form.submit();\n    }\n\n    const selectEls = configroot.querySelectorAll('*[data-sw-selected]');\n    for (let selectEl of selectEls) {\n        selectEl.value = selectEl.getAttribute('data-sw-selected');\n    }\n\n    configroot.oninput = async (e) => {\n        const target = e.target;\n        const type = target.getAttribute('data-sw-type');\n        const browserelement = getAncestorWithClass(target, 'sw-browser');\n        switch (type) {\n            case 'name':\n                const isEmpty = target.value.length === 0;\n                browserelement.setAttribute('data-sw-empty', isEmpty);\n                if (!isEmpty && browserelement.nextElementSibling === null) {\n                    await appendEmptyBrowserElement();\n                }\n                break;\n            case 'issinglerule':\n                browserelement.setAttribute('data-sw-singlerule', target.checked);\n                break;\n            case 'multi-version':\n                const misEmpty = target.value.length === 0;\n                const versionelement = getAncestorWithClass(target, 'sw-version');\n                versionelement.setAttribute('data-sw-empty', misEmpty);\n                if (!misEmpty && versionelement.nextElementSibling === null) {\n                    await appendEmptyVersionElement(versionelement.parentElement);\n                }\n                break;\n        }\n    }\n\n    configroot.onclick = async (e) => {\n        const versionAncestor = getAncestorWithClass(e.target, 'sw-delete-version');\n        if (versionAncestor != null) {\n            const swverion = getAncestorWithClass(versionAncestor, 'sw-version');\n            const parent = swverion.parentElement;\n            swverion.remove();\n            if (parent.lastElementChild.getAttribute('data-sw-empty') !== 'true') {\n                await appendEmptyVersionElement(parent);\n            }\n        } else {\n            const browserAncestor = getAncestorWithClass(e.target, 'sw-delete-browser');\n            if (browserAncestor != null) {\n                getAncestorWithClass(browserAncestor, 'sw-browser').remove();\n                if (configroot.lastElementChild.getAttribute('data-sw-empty') !== 'true') {\n                    await appendEmptyBrowserElement();\n                }\n            }\n        }\n    }\n\n    anchor.appendChild(root);\n}\n\nfunction getAncestorWithAttribute(node, attribute) {\n    while(!node.hasAttribute(attribute)) {\n        node = node.parentElement;\n    }\n    return node;\n}\n\nfunction getAncestorWithClass(node, theclass)  {\n    while(!node.classList.contains(theclass)) {\n        if (node.parentElement == null) {\n            return null;\n        }\n        node = node.parentElement;\n    }\n    return node;\n}\n\nasync function createBrowserConfigElement(config) {\n    const context = transformConfig(config);\n    return await renderTemplate('local_softwarewarning/browserconfig', context);\n}\n\n/**\n *\n * @param {Object} config\n */\nfunction transformConfig(config) {\n    const browsers = [];\n    for (let browser in config) {\n        const versions = config[browser];\n        const versionsArr = [];\n        for (let version in versions) {\n            if (version === 'all')\n                continue;\n\n            versionsArr.push({\n                version: version,\n                banner: versions[version]\n            })\n        }\n        versionsArr.push({\n            version: \"\",\n            banner: \"unrecognized\"\n        })\n        browsers.push({\n            browsername: browser,\n            issinglerule: !!versions['all'],\n            singlebanner: versions['all'],\n            multirulebanners: versionsArr\n        })\n    }\n    browsers.push({\n        browsername: '',\n        issinglerule: true,\n        singlebanner: \"unrecognized\",\n        multirulebanners: [{\n            version: \"\",\n            banner: \"unrecognized\"\n        }]\n    });\n    return {\n        \"banners\": bannertypes,\n        \"browsers\": browsers\n    };\n}\n\nasync function renderTemplate(template, context) {\n    const html = await Templates.render(template, context);\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    return div.firstElementChild;\n}\n\nasync function appendEmptyBrowserElement() {\n    const node = await renderTemplate('local_softwarewarning/browserconfig_browser', {\n        \"banners\": bannertypes,\n        \"browsername\": \"\",\n        \"issinglerule\": true,\n        \"singlebanner\": \"unrecognized\",\n        \"multirulebanners\": [\n            {\n                \"version\": \"\",\n                \"banner\": \"unrecognized\"\n            }\n        ]\n    });\n    configroot.appendChild(node);\n}\n\nasync function appendEmptyVersionElement(parentElement) {\n    const node = await renderTemplate('local_softwarewarning/browserconfig_version', {\n        \"banners\": bannertypes,\n        \"version\": \"\",\n        \"banner\": \"unrecognized\"\n    });\n    parentElement.appendChild(node);\n}\n\nfunction getConfigFromDOM() {\n    const config = {};\n    for (let browserdom of configroot.children) {\n        const browser = browserdom.querySelector('input[data-sw-type=\"name\"]').value;\n        if (browser.length === 0)\n            continue;\n\n        const issinglerule = browserdom.getAttribute('data-sw-singlerule') === 'true';\n        let versions = {};\n        if (issinglerule) {\n            versions['all'] = browserdom.querySelector('select[data-sw-type=\"singlerule\"]').value;\n        } else {\n            const anchor = browserdom.querySelector('.sw-multirule-anchor');\n            for (let versiondom of anchor.children) {\n                const version = parseInt(versiondom.querySelector('input[data-sw-type=\"multi-version\"]').value);\n                if (isNaN(version))\n                    continue;\n                versions[version] = versiondom.querySelector('select[data-sw-type=\"multi-banner\"]').value;\n            }\n        }\n        config[browser] = versions;\n    }\n    return config;\n}"],"names":["anchor","configroot","bannertypes","defaultbrowsers","getAncestorWithClass","node","theclass","classList","contains","parentElement","renderTemplate","template","context","html","Templates","render","div","document","createElement","innerHTML","firstElementChild","appendEmptyBrowserElement","appendChild","appendEmptyVersionElement","_config","_bannertypes","_defaultbrowsers","getElementById","root","config","browsers","browser","versions","versionsArr","version","push","banner","browsername","issinglerule","singlebanner","multirulebanners","transformConfig","createBrowserConfigElement","querySelector","onclick","configjson","JSON","stringify","browserdom","children","value","length","getAttribute","versiondom","parseInt","isNaN","getConfigFromDOM","form","method","action","input","name","M","cfg","sesskey","body","submit","selectEls","querySelectorAll","selectEl","oninput","async","target","e","type","browserelement","isEmpty","setAttribute","nextElementSibling","checked","misEmpty","versionelement","versionAncestor","swverion","parent","remove","lastElementChild","browserAncestor"],"mappings":"4HAIIA,OAAQC,WAAYC,YAAaC,yBA+F5BC,qBAAqBC,KAAMC,gBACzBD,KAAKE,UAAUC,SAASF,WAAW,IACZ,MAAtBD,KAAKI,qBACE,KAEXJ,KAAOA,KAAKI,qBAETJ,oBAoDIK,eAAeC,SAAUC,eAC9BC,WAAaC,mBAAUC,OAAOJ,SAAUC,SACxCI,IAAMC,SAASC,cAAc,cACnCF,IAAIG,UAAYN,KACTG,IAAII,iCAGAC,kCACLhB,WAAaK,eAAe,8CAA+C,SAClER,wBACI,iBACC,eACA,gCACI,CAChB,SACe,UACD,mBAItBD,WAAWqB,YAAYjB,qBAGZkB,0BAA0Bd,qBAC/BJ,WAAaK,eAAe,8CAA+C,SAClER,oBACA,UACD,iBAEdO,cAAca,YAAYjB,2FA/KHmB,QAASC,aAAcC,kBAC9CxB,YAAcuB,aACdtB,gBAAkBuB,iBAElB1B,OAASiB,SAASU,eAAe,sCAC3BC,0BA4FgCC,cAChCjB,iBAQeiB,cACfC,SAAW,OACZ,IAAIC,WAAWF,OAAQ,OAClBG,SAAWH,OAAOE,SAClBE,YAAc,OACf,IAAIC,WAAWF,SACA,QAAZE,SAGJD,YAAYE,KAAK,CACbD,QAASA,QACTE,OAAQJ,SAASE,WAGzBD,YAAYE,KAAK,CACbD,QAAS,GACTE,OAAQ,iBAEZN,SAASK,KAAK,CACVE,YAAaN,QACbO,eAAgBN,SAAQ,IACxBO,aAAcP,SAAQ,IACtBQ,iBAAkBP,qBAG1BH,SAASK,KAAK,CACVE,YAAa,GACbC,cAAc,EACdC,aAAc,eACdC,iBAAkB,CAAC,CACfN,QAAS,GACTE,OAAQ,mBAGT,SACQlC,qBACC4B,UA5CAW,CAAgBZ,qBACnBnB,eAAe,sCAAuCE,SA9FhD8B,CAA2BlB,SAC9CvB,WAAa2B,KAAKe,cAAc,iCAChBf,KAAKe,cAAc,+BAE3BC,QAAU,WACRC,WAAaC,KAAKC,2BAyKtBlB,OAAS,OACV,IAAImB,cAAc/C,WAAWgD,SAAU,OAClClB,QAAUiB,WAAWL,cAAc,8BAA8BO,SAChD,IAAnBnB,QAAQoB,OACR,aAGAnB,SAAW,MADwD,SAAlDgB,WAAWI,aAAa,sBAGzCpB,SAAQ,IAAUgB,WAAWL,cAAc,qCAAqCO,UAC7E,OACGlD,OAASgD,WAAWL,cAAc,4BACnC,IAAIU,cAAcrD,OAAOiD,SAAU,OAC9Bf,QAAUoB,SAASD,WAAWV,cAAc,uCAAuCO,OACrFK,MAAMrB,WAEVF,SAASE,SAAWmB,WAAWV,cAAc,uCAAuCO,QAG5FrB,OAAOE,SAAWC,gBAEfH,OA9L+B2B,IAC5BC,KAAOxC,SAASC,cAAc,QACpCuC,KAAKC,OAAS,OACdD,KAAKE,OAAS,OACVC,MAAQ3C,SAASC,cAAc,SACnC0C,MAAMC,KAAO,UACbD,MAAMV,MAAQY,EAAEC,IAAIC,QACpBP,KAAKnC,YAAYsC,OACjBA,MAAQ3C,SAASC,cAAc,SAC/B0C,MAAMC,KAAO,OACbD,MAAMV,MAAQL,WACdY,KAAKnC,YAAYsC,OACjB3C,SAASgD,KAAK3C,YAAYmC,MAC1BA,KAAKS,gBAGHC,UAAYlE,WAAWmE,iBAAiB,2BACzC,IAAIC,YAAYF,UACjBE,SAASnB,MAAQmB,SAASjB,aAAa,oBAG3CnD,WAAWqE,QAAUC,MAAAA,UACXC,OAASC,EAAED,OACXE,KAAOF,OAAOpB,aAAa,gBAC3BuB,eAAiBvE,qBAAqBoE,OAAQ,qBAC5CE,UACC,aACKE,QAAkC,IAAxBJ,OAAOtB,MAAMC,OAC7BwB,eAAeE,aAAa,gBAAiBD,SACxCA,SAAiD,OAAtCD,eAAeG,0BACrBzD,sCAGT,eACDsD,eAAeE,aAAa,qBAAsBL,OAAOO,mBAExD,sBACKC,SAAmC,IAAxBR,OAAOtB,MAAMC,OACxB8B,eAAiB7E,qBAAqBoE,OAAQ,cACpDS,eAAeJ,aAAa,gBAAiBG,UACxCA,UAAkD,OAAtCC,eAAeH,0BACtBvD,0BAA0B0D,eAAexE,iBAM/DR,WAAW2C,QAAU2B,MAAAA,UACXW,gBAAkB9E,qBAAqBqE,EAAED,OAAQ,wBAChC,MAAnBU,gBAAyB,OACnBC,SAAW/E,qBAAqB8E,gBAAiB,cACjDE,OAASD,SAAS1E,cACxB0E,SAASE,SACqD,SAA1DD,OAAOE,iBAAiBlC,aAAa,wBAC/B7B,0BAA0B6D,YAEjC,OACGG,gBAAkBnF,qBAAqBqE,EAAED,OAAQ,qBAChC,MAAnBe,kBACAnF,qBAAqBmF,gBAAiB,cAAcF,SACc,SAA9DpF,WAAWqF,iBAAiBlC,aAAa,wBACnC/B,+BAMtBrB,OAAOsB,YAAYM"}