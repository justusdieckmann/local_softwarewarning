{"version":3,"file":"browserconstraintsui.min.js","sources":["../src/browserconstraintsui.js"],"sourcesContent":["/* eslint-disable */\n\nimport Templates from 'core/templates';\n\nlet anchor, root;\n\n/**\n * Init\n * @param {object} config\n * @param {array} bannertypes\n * @param {array} defaultbrowsers\n */\nexport async function init(config, bannertypes, defaultbrowsers) {\n    anchor = document.getElementById('local_softwarewarning-anchor');\n    root = await createBrowserconfigelement();\n\n    const selectEls = root.querySelectorAll('*[data-sw-selected]');\n    for (let selectEl of selectEls) {\n        selectEl.value = selectEl.getAttribute('data-sw-selected');\n    }\n\n    root.oninput = async (e) => {\n        const target = e.target;\n        const type = target.getAttribute('data-sw-type');\n        const browserelement = getAncestorWithClass(target, 'sw-browser');\n        console.log(type, e.target);\n        switch (type) {\n            case 'name':\n                const isEmpty = target.value.length === 0;\n                browserelement.setAttribute('data-sw-empty', isEmpty);\n                if (!isEmpty && browserelement.nextElementSibling === null) {\n                    await appendEmptyBrowserElement();\n                }\n                break;\n            case 'issinglerule':\n                browserelement.setAttribute('data-sw-singlerule', target.checked);\n                break;\n            case 'multi-version':\n                const misEmpty = target.value.length === 0;\n                const versionelement = getAncestorWithClass(target, 'sw-version');\n                versionelement.setAttribute('data-sw-empty', misEmpty);\n                if (!misEmpty && versionelement.nextElementSibling === null) {\n                    await appendEmptyVersionElement(versionelement.parentElement);\n                }\n                break;\n            default:\n                console.log(type, e.target);\n        }\n    }\n\n    root.onclick = async (e) => {\n        const versionAncestor = getAncestorWithClass(e.target, 'sw-delete-version');\n        console.log(versionAncestor);\n        if (versionAncestor != null) {\n            const swverion = getAncestorWithClass(versionAncestor, 'sw-version');\n            const parent = swverion.parentElement;\n            swverion.remove();\n            if (parent.lastElementChild.getAttribute('data-sw-empty') !== 'true') {\n                await appendEmptyVersionElement(parent);\n            }\n        } else {\n            const browserAncestor = getAncestorWithClass(e.target, 'sw-delete-browser');\n            if (browserAncestor != null) {\n                getAncestorWithClass(browserAncestor, 'sw-browser').remove();\n                if (root.lastElementChild.getAttribute('data-sw-empty') !== 'true') {\n                    await appendEmptyBrowserElement();\n                }\n            }\n        }\n    }\n\n    anchor.appendChild(root);\n}\n\nfunction getAncestorWithAttribute(node, attribute) {\n    while(!node.hasAttribute(attribute)) {\n        node = node.parentElement;\n    }\n    return node;\n}\n\nfunction getAncestorWithClass(node, theclass)  {\n    while(!node.classList.contains(theclass)) {\n        if (node.parentElement == null) {\n            return null;\n        }\n        node = node.parentElement;\n    }\n    return node;\n}\n\nasync function createBrowserconfigelement() {\n    return await renderTemplate('local_softwarewarning/browserconfig', {\n        \"banners\": [\"supported\", \"unsupported\", \"deprecated\"],\n        \"browsers\": [\n            {\n                \"i\":  0,\n                \"browsername\": \"IE\",\n                \"issinglerule\": true,\n                \"singlebanner\": \"unsupported\",\n                \"multirulebanners\": [\n                    {\n                        \"version\": \"80\",\n                        \"banner\": \"deprecated\"\n                    }\n                ]\n            },\n            {\n                \"i\":  1,\n                \"browsername\": \"Firefox\",\n                \"issinglerule\": false,\n                \"singlebanner\": \"unsupported\",\n                \"multirulebanners\": [\n                    {\n                        \"version\": \"90\",\n                        \"banner\": \"deprecated\"\n                    },\n                    {\n                        \"version\": \"70\",\n                        \"banner\": \"unsupported\"\n                    }\n                ]\n            }\n        ]\n    });\n}\n\nasync function renderTemplate(template, context) {\n    const html = await Templates.render(template, context);\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    return div.firstElementChild;\n}\n\nasync function appendEmptyBrowserElement() {\n    const node = await renderTemplate('local_softwarewarning/browserconfig_browser', {\n        \"banners\": ['supported', 'unsupported', 'deprecated'],\n        \"i\": 123,\n        \"browsername\": \"\",\n        \"issinglerule\": true,\n        \"singlebanner\": \"supported\",\n        \"multirulebanners\": [\n            {\n                \"version\": \"\",\n                \"banner\": \"supported\"\n            }\n        ]\n    });\n    root.appendChild(node);\n}\n\nasync function appendEmptyVersionElement(parentElement) {\n    console.log(parentElement);\n    const node = await renderTemplate('local_softwarewarning/browserconfig_version', {\n        \"banners\": ['unrecognized', 'supported', 'unsupported', 'deprecated'],\n        \"version\": \"\",\n        \"banner\": \"unrecognized\"\n    });\n    console.log(node);\n    parentElement.appendChild(node);\n}"],"names":["anchor","root","getAncestorWithClass","node","theclass","classList","contains","parentElement","renderTemplate","template","context","html","Templates","render","div","document","createElement","innerHTML","firstElementChild","appendEmptyBrowserElement","appendChild","appendEmptyVersionElement","console","log","config","bannertypes","defaultbrowsers","getElementById","createBrowserconfigelement","selectEls","querySelectorAll","selectEl","value","getAttribute","oninput","async","target","e","type","browserelement","isEmpty","length","setAttribute","nextElementSibling","checked","misEmpty","versionelement","onclick","versionAncestor","swverion","parent","remove","lastElementChild","browserAncestor"],"mappings":"4HAIIA,OAAQC,cA6EHC,qBAAqBC,KAAMC,gBACzBD,KAAKE,UAAUC,SAASF,WAAW,IACZ,MAAtBD,KAAKI,qBACE,KAEXJ,KAAOA,KAAKI,qBAETJ,oBAuCIK,eAAeC,SAAUC,eAC9BC,WAAaC,mBAAUC,OAAOJ,SAAUC,SACxCI,IAAMC,SAASC,cAAc,cACnCF,IAAIG,UAAYN,KACTG,IAAII,iCAGAC,kCACLhB,WAAaK,eAAe,8CAA+C,SAClE,CAAC,YAAa,cAAe,gBACnC,gBACU,iBACC,eACA,6BACI,CAChB,SACe,UACD,gBAItBP,KAAKmB,YAAYjB,qBAGNkB,0BAA0Bd,eACrCe,QAAQC,IAAIhB,qBACNJ,WAAaK,eAAe,8CAA+C,SAClE,CAAC,eAAgB,YAAa,cAAe,sBAC7C,UACD,iBAEdc,QAAQC,IAAIpB,MACZI,cAAca,YAAYjB,2FAnJHqB,OAAQC,YAAaC,iBAC5C1B,OAASe,SAASY,eAAe,gCACjC1B,yCA8EaO,eAAe,sCAAuC,SACpD,CAAC,YAAa,cAAe,uBAC5B,CACR,GACU,cACS,mBACC,eACA,+BACI,CAChB,SACe,YACD,gBAItB,GACU,cACS,wBACC,eACA,+BACI,CAChB,SACe,YACD,cAEd,SACe,YACD,oBAzGjBoB,SAEPC,UAAY5B,KAAK6B,iBAAiB,2BACnC,IAAIC,YAAYF,UACjBE,SAASC,MAAQD,SAASE,aAAa,oBAG3ChC,KAAKiC,QAAUC,MAAAA,UACLC,OAASC,EAAED,OACXE,KAAOF,OAAOH,aAAa,gBAC3BM,eAAiBrC,qBAAqBkC,OAAQ,qBACpDd,QAAQC,IAAIe,KAAMD,EAAED,QACZE,UACC,aACKE,QAAkC,IAAxBJ,OAAOJ,MAAMS,OAC7BF,eAAeG,aAAa,gBAAiBF,SACxCA,SAAiD,OAAtCD,eAAeI,0BACrBxB,sCAGT,eACDoB,eAAeG,aAAa,qBAAsBN,OAAOQ,mBAExD,sBACKC,SAAmC,IAAxBT,OAAOJ,MAAMS,OACxBK,eAAiB5C,qBAAqBkC,OAAQ,cACpDU,eAAeJ,aAAa,gBAAiBG,UACxCA,UAAkD,OAAtCC,eAAeH,0BACtBtB,0BAA0ByB,eAAevC,6BAInDe,QAAQC,IAAIe,KAAMD,EAAED,UAIhCnC,KAAK8C,QAAUZ,MAAAA,UACLa,gBAAkB9C,qBAAqBmC,EAAED,OAAQ,wBACvDd,QAAQC,IAAIyB,iBACW,MAAnBA,gBAAyB,OACnBC,SAAW/C,qBAAqB8C,gBAAiB,cACjDE,OAASD,SAAS1C,cACxB0C,SAASE,SACqD,SAA1DD,OAAOE,iBAAiBnB,aAAa,wBAC/BZ,0BAA0B6B,YAEjC,OACGG,gBAAkBnD,qBAAqBmC,EAAED,OAAQ,qBAChC,MAAnBiB,kBACAnD,qBAAqBmD,gBAAiB,cAAcF,SACQ,SAAxDlD,KAAKmD,iBAAiBnB,aAAa,wBAC7Bd,+BAMtBnB,OAAOoB,YAAYnB"}